
proc gen_dummy_liberty {netlist_file liberty_file module_name} {
  set file_r [open $netlist_file r]
  set file_w [open $liberty_file w]
  set record "false"
  set port_count "0"
  set verilog_line ""
  array unset port_table
  while {![eof $file_r]} {
    set line [gets $file_r]
    set line [regsub -all " +\\\\" $line " "]
    set line [regsub -all "," $line " "]    
    
    if {([regexp "^ +input " $line]) || ([regexp "^ +output " $line]) || ([regexp "^ +inout " $line])} {
      set record "true"
    }
    if { $record == "true" } {
      if {$verilog_line == ""} {
        set verilog_line $line
      } else {
        set verilog_line "$verilog_line $line"
      }
      if {[regexp {;} $line]} {
        
#puts "LINE: $verilog_line"        
        
        # Collect info in verilog file
        # puts $file_w $verilog_line
        set direction [lindex $verilog_line 0]
        if {[regexp {\[([0-9]+)\:([0-9]+)\]} [lindex $verilog_line 1] match upper_bit lower_bit]} {
          for {set i 2} {$i<[llength $verilog_line]} {incr i} {
            
            if { [lindex $verilog_line $i] == ";" } { continue }
            set port_table($port_count) "[regsub {,|;} [lindex $verilog_line $i] {}] $direction $upper_bit $lower_bit"
            
#            puts "1: [lindex $verilog_line $i] :: $port_table($port_count)"            
            
            incr port_count
          }
        } else {
          for {set i 1} {$i<[llength $verilog_line]} {incr i} {

            if { [lindex $verilog_line $i] == ";" } { continue }          
            set port_table($port_count) "[regsub {,|;} [lindex $verilog_line $i] {}] $direction single_bit single_bit"
            
#            puts "2: [lindex $verilog_line $i] :: $port_table($port_count)"            
            
            incr port_count
          }
        }


        # End collect info in verilog file
       
        set record "false"
        set verilog_line ""
      }
    }
  }
  
  puts $file_w "library \($module_name \)\{"
  puts $file_w "  delay_model : table_lookup;"
  puts $file_w "  date : \"No Date\" ;"
  puts $file_w "  revision : \"1.0\" ;"
  puts $file_w "  library_features(report_delay_calculation); "
  puts $file_w "  bus_naming_style : \"%s\[%d\]\" ;"
  puts $file_w "  comment : \"Generated By manual script\" ;"
  puts $file_w "  "
  puts $file_w "  /* unit attributes */"
  puts $file_w "  capacitive_load_unit ( 1.0000,pf);"
  puts $file_w "  current_unit : \"1mA\" ;"
  puts $file_w "  pulling_resistance_unit : \"1kohm\" ;"
  puts $file_w "  time_unit : \"1ns\" ;"
  puts $file_w "  voltage_unit : \"1V\" ;"
  puts $file_w "  leakage_power_unit : \"1nW\" ;"
  puts $file_w "  "
  puts $file_w "  /* threshold definitions */"
  puts $file_w "  input_threshold_pct_fall : 50.0000;"
  puts $file_w "  input_threshold_pct_rise : 50.0000;"
  puts $file_w "  output_threshold_pct_fall : 50.0000;"
  puts $file_w "  output_threshold_pct_rise : 50.0000;"
  puts $file_w "  slew_lower_threshold_pct_fall : 30.0000;"
  puts $file_w "  slew_lower_threshold_pct_rise : 30.0000;"
  puts $file_w "  slew_upper_threshold_pct_fall : 70.0000;"
  puts $file_w "  slew_upper_threshold_pct_rise : 70.0000;"
  puts $file_w "  slew_derate_from_library : 0.5000;"
  puts $file_w "  "
  puts $file_w "  /* operating conditions */"
  puts $file_w "  operating_conditions (ssgnp_0p675v_0c_cworst_CCworst_T ){"
  puts $file_w "    process :  1.0000;"
  puts $file_w "    temperature :  0.0000;"
  puts $file_w "    voltage :  0.6750;"
  puts $file_w "    tree_type :  \"balanced_tree\" ;"
  puts $file_w "  }"
  puts $file_w "  default_operating_conditions : \"ssgnp_0p675v_0c_cworst_CCworst_T\" ;"
  puts $file_w "  nom_process : 1.0000;"
  puts $file_w "  nom_temperature : 0.0000;"
  puts $file_w "  nom_voltage : 0.6750;"
  puts $file_w "  "
  puts $file_w "  /* default attributes */"
  puts $file_w "  default_fanout_load : 1.0000;"
  puts $file_w "  default_inout_pin_cap : 1.0000;"
  puts $file_w "  default_input_pin_cap : 1.0000;"
  puts $file_w "  default_output_pin_cap : 0.0000;"
  puts $file_w "  default_wire_load_area : 0.0000;"
  puts $file_w "  default_wire_load_capacitance : 0.0000;"
  puts $file_w "  default_wire_load_resistance : 3.7000;"
  puts $file_w "  k_process_cell_rise :  0.0000;"
  puts $file_w "  k_process_cell_fall :  0.0000;"
  puts $file_w "  k_volt_cell_rise :  0.0000;"
  puts $file_w "  k_volt_cell_fall :  0.0000;"
  puts $file_w "  k_temp_cell_rise :  0.0000;"
  puts $file_w "  k_temp_cell_fall :  0.0000;"
  puts $file_w "  k_process_rise_transition :  0.0000;"
  puts $file_w "  k_process_fall_transition :  0.0000;"
  puts $file_w "  k_volt_rise_transition :  0.0000;"
  puts $file_w "  k_volt_fall_transition :  0.0000;"
  puts $file_w "  k_temp_rise_transition :  0.0000;"
  puts $file_w "  k_temp_fall_transition :  0.0000;"
  puts $file_w "  "
  puts $file_w "  /* templates */"
  puts $file_w "  define( min_delay_arc , timing , boolean ) ;"
  puts $file_w "  "
  puts $file_w "  /* end of header section */"
  puts $file_w "  "
  puts $file_w "  cell ($module_name ) \{ "
  puts $file_w "    area :  0.0000;"
  puts $file_w "    dont_touch : true ;"
  puts $file_w "    dont_use : true ;"
  puts $file_w "    timing_model_type : extracted ;"
  puts $file_w "    is_macro_cell : true ;"
  puts $file_w "  "

  for {set i 0} {$i<$port_count} {incr i} {
    if {[lindex $port_table($i) 2] == "single_bit"} {
      puts $file_w "    pin ([lindex $port_table($i) 0]) \{"
      puts $file_w "      direction : [lindex $port_table($i) 1] ;"
      puts $file_w "      capacitance :  0.0000;"
      puts $file_w "    \}"
      puts $file_w ""
    } else {
      set bus_type bus_[lindex $port_table($i) 2]_[lindex $port_table($i) 3]
      if {![info exists bus_declared($bus_type)]} {
        set bus_declared($bus_type) 1
        puts $file_w "    type ($bus_type) \{"
        puts $file_w "      base_type : array ;"
        puts $file_w "      data_type : bit ;"
        puts $file_w "      bit_width :  [expr [lindex $port_table($i) 2] + 1];"
        puts $file_w "      bit_from :  [lindex $port_table($i) 2];"
        puts $file_w "      bit_to :  [lindex $port_table($i) 3];"
        puts $file_w "      downto : true ;"
        puts $file_w "    \}"
        puts $file_w ""
      }
      puts $file_w "    bus ([lindex $port_table($i) 0]) \{"
      puts $file_w "      bus_type :  $bus_type ;"
      puts $file_w ""
      for {set j [lindex $port_table($i) 3]} {$j<=[lindex $port_table($i) 2]} {incr j 1} {
        puts $file_w "      pin ([lindex $port_table($i) 0]\[$j\] ) \{"
        puts $file_w "        direction : [lindex $port_table($i) 1] ;"
        puts $file_w "        capacitance :  0.0000;"
        puts $file_w "      \}"
        puts $file_w ""      
      }
      puts $file_w "    \}"
      puts $file_w ""
    }
  }

  puts $file_w "  \} /* End of Design */"
  puts $file_w "  "
  puts $file_w "\} /* End of Library */"

  close $file_r
  close $file_w
  
}
