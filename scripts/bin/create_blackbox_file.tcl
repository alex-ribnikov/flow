#!/bin/tclsh



proc _parse_args_ { args } {
    upvar opt opt
    set args [regsub -all "\{\|\}\|\\\\" $args ""]
    set split_args [split $args "-"]
    
    foreach arg $split_args {
        if { $arg == "" || $arg == "{" || $arg == "}" } { continue }
        set opt([lindex $arg 0]) [lrange $arg 1 end]
    }
}

proc create_blackbox_file { args } {
    
    if { [regexp "\\\-help" $args] } { 
        puts "-HELP- Generate tcl file that converts hinsts to blackboxes
        -cell_name        \tStrinf \tBase cell name to convert
        -top_layer        \tInt    \tTop route index (i.e. 15 == M14)
        -bottom_layer     \tInt    \tBottom route index (i.e. 1 == M0). Default is 1
        -top_pin_layer    \tInt    \tTop layer for pin assignment. Default is top_layer
        -bottom_pin_layer \tInt    \tBottom layer for pin assignment. Default is 4
        -size             \tList   \t\"x,y\"
        -file_name        \tString \tOutput file name
        -append_to_file           \tBool   \tIf true, append to file. Default is true"
        return
    }
  
    ### Parse args ###
    _parse_args_  $args
    
    set cell_name $opt(cell_name)
    set size      [split $opt(size) " "]
    set top_layer $opt(top_layer)
    set file_name $opt(file_name) 

    if { ![info exists opt(append_to_file)]   || [set append_to_file   $opt(append_to_file)  ] == {} } { set append_to_file true }     
    if { ![info exists opt(bottom_layer)]     || [set bottom_layer     $opt(bottom_layer)    ] == {} } { set bottom_layer 1 } 
    if { ![info exists opt(top_pin_layer)]    || [set top_pin_layer    $opt(top_pin_layer)   ] == {} } { set top_pin_layer $top_layer } 
    if { ![info exists opt(bottom_pin_layer)] || [set bottom_pin_layer $opt(bottom_pin_layer)] == {} } { set bottom_pin_layer 4 } 

    
    ### bbox vars ###
    set min_pitch 2
    set core_spacing [list 0 0 0 0]
    
    for { set i $bottom_layer } { $i <= $top_layer } { incr i 1 } { lappend layers $i }
    for { set i [expr ($bottom_pin_layer%2) == 0 ? ($bottom_pin_layer + 1) : $bottom_pin_layer] } { $i <= $top_pin_layer } { incr i 2 } { lappend h_pin_layers $i }
    for { set i [expr ($bottom_pin_layer%2) == 1 ? ($bottom_pin_layer + 1) : $bottom_pin_layer] } { $i <= $top_pin_layer } { incr i 2 } { lappend v_pin_layers $i }    
    
    ### Create blackbox file ###
    if { !$append_to_file || ![file exists $file_name] } {
    set fp [open $file_name w]
    } else {
    set fp [open $file_name a]
    }

#create_blackbox -cell nfi_mcu_top -size [list $nfi_w $nfi_h] -core_spacing 0.0 0.0 0.0 0.0 \
#                -min_pitch_left 2 -min_pitch_right 2 -min_pitch_top 2 -min_pitch_bottom 2 \
#                -reserved_layer { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16} -pin_layer_top { 4 6 8 10 12 14 16 } -pin_layer_left { 5 7 9 11 13 15 } \
#                 -pin_layer_bottom { 4 6 8 10 12 14 16 } -pin_layer_right { 5 7 9 11 13 15 } 

    puts $fp "
###############################################################
#  Generated by:      create_blackbox_file script
#  Generated on:      [exec date]
#  Design:            $cell_name
#  Size:              $size
#  File Name:         $file_name
#  User:              $::env(USER)
###############################################################
\n\n"
    
    puts $fp "create_blackbox -cell $cell_name -size $size -core_spacing $core_spacing \\
    -min_pitch_left $min_pitch -min_pitch_right $min_pitch -min_pitch_top $min_pitch -min_pitch_bottom $min_pitch \\
    -reserved_layer \{$layers\} -pin_layer_top \{$v_pin_layers\} -pin_layer_bottom \{$v_pin_layers\} \\
    -pin_layer_left \{$h_pin_layers\} -pin_layer_right \{$h_pin_layers\}
    "
    
    close $fp    
    
}
create_blackbox_file [split $argv " "]
