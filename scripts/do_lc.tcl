set STAGE lc

# Verify libs dir
if { ![info exists LIBS_DIR] || ![file exists $LIBS_DIR] } {
    puts "-E- $LIBS_DIR folder not found"
    exit
}

# Verify db dir
if { ![info exists DB_DIR] || ![file exists $DB_DIR] } {
    puts "-E- $DB_DIR folder not found"
    exit
}

# Get .lib files
set suffix ".lib"
if { [catch { set libs [glob $LIBS_DIR/*.lib] } res ] } {
    set suffix ".lib.gz"
    if { [catch { set libs [glob $LIBS_DIR/*.lib.gz] } res ] } {
        puts "-E- No .lib or .lib.gz files found in $LIBS_DIR"
        exit
    }
}

# Read libs
set cmd ""
foreach lib $libs {
    append cmd "read_lib $lib\n"
}
puts "Running:\n$cmd"
eval $cmd

# Generate new names for db files to match NS naming convention
array unset lib_name_arr
foreach_in_collection lib [get_libs] {
    
    set lib_name [get_attribute $lib name]
    set comment  [get_attribute $lib comment]
    set dummy    ""
    
    if { ![regexp "\[a-zA-Z0-9_\\\.\]+$suffix" $comment res ] } { 
        if { [string match $comment "{Generated By manual script}"] } {
            set dummy "_from_stub"
        } else {
            puts "-E_ IDK...." ; puts $comment ;  continue         
        }
    }
    puts "-I- Lib $lib_name came from the file: $LIBS_DIR/$res"

    set new_name "${lib_name}${dummy}.db"
    puts "-I- Lib $lib_name will be saved in: $DB_DIR/$new_name"
    
    set lib_name_arr($lib_name) $DB_DIR/$new_name
    
}

# Write lib files
set cmd ""
foreach name [array names lib_name_arr] {
    append cmd "write_lib $name -output $lib_name_arr($name)\n"
}
puts "Running:\n$cmd"
eval $cmd

puts "-I- LC Done"
exit







# Read libs
set cmd ""
foreach lib $libs {
    remove_lib -all
    
    puts "-I- Reading lib: $lib"
    read_lib $lib
    
    set new_lib [get_libs] 
    
    regexp "/(\[a-zA-Z0-9_\\\.\]+)$suffix\$" $lib res name
    set new_name "${name}.db"

    puts "-I- Lib $lib will be saved in: $DB_DIR/$new_name"
    write_lib [get_attribute $new_lib name] -output $DB_DIR/$new_name
         
}

puts "-I- LC Done"
exit






